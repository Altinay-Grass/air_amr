<?xml version="1.0" encoding="UTF-8"?>
<launch>

<arg name="use_gmapping" default="false"></arg>
<arg name="use_hector" default="false"></arg>
<arg name="use_slam_toolbox" default="false"></arg>

<arg name="joy_config" default="xbox" />
<arg name="joy_dev" default="/dev/input/js0" />
<arg name="config_filepath" default="$(find teleop_twist_joy)/config/$(arg joy_config).config.yaml" />
<arg name="joy_topic" default="joy" />

<param
    name="robot_description"
    textfile="$(find amr_description)/urdf/amr_simply.urdf"
/>
<node
    name="robot_state_publisher"
    pkg="robot_state_publisher"
    type="robot_state_publisher"
    respawn="false"
    output="screen"

>
</node>

<node name="urg_node" pkg="urg_node" type="urg_node" output="screen">
      <param name="ip_address" value=""/>
      <param name="serial_port" value="/dev/ttyACM0"/>
      <param name="serial_baud" value="115200"/>
      <param name="frame_id" value="hokuyo_link"/>
      <param name="calibrate_time" value="true"/>
      <param name="publish_intensity" value="false"/>
      <param name="publish_multiecho" value="false"/>
      <!-- <param name="angle_min" value="-1.5707963"/>
      <param name="angle_max" value="1.5707963"/> -->
      <param name="angle_min" value="-2.0943951"/>
      <param name="angle_max" value="2.0943951"/>
</node>

<node pkg="joy" type="joy_node" name="joy_node">
    <param name="dev" value="$(arg joy_dev)" />
    <param name="deadzone" value="0.3" />
    <param name="autorepeat_rate" value="20" />
    <remap from="joy" to="$(arg joy_topic)" />
  </node>

<node pkg="teleop_twist_joy" name="teleop_twist_joy" type="teleop_node">
  <rosparam command="load" file="$(arg config_filepath)" />
  <remap from="joy" to="$(arg joy_topic)" />
  <remap from="cmd_vel" to="/amr/mobile_base_controller/cmd_vel"/>
</node>

<include file="$(find amr_hardware_interface)/launch/controller_hardware_interface.launch"></include>

<!-- <include 
    file="$(find amr_control)/launch/amr_control.launch">
    <arg name="provide_odom_tf" value="true"></arg>    
    </include>
        <include file="$(find amr_mapping)/launch/slam_toolbox.launch">
        <arg name="$(arg mode)" value="true"></arg>
</include> -->

<group if="$(arg use_gmapping)">
        <include 
            file="$(find amr_control)/launch/amr_control.launch">
            <arg name="provide_odom_tf" value="true"></arg>    
        </include>
        <include file="$(find amr_mapping)/launch/amr_gmapping.launch"></include>
</group>
<group if="$(arg use_hector)">
        <include 
            file="$(find amr_control)/launch/amr_control.launch">
            <arg name="provide_odom_tf" value="false"></arg>    
        </include>
        <include file="$(find amr_mapping)/launch/hector_mapping.launch"></include>        
</group>
<group if="$(arg use_slam_toolbox)">
        <include 
            file="$(find amr_control)/launch/amr_control.launch">
            <arg name="provide_odom_tf" value="true"></arg>    
        </include>
        <!-- <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)"></node> -->
        <include file="$(find amr_mapping)/launch/slam_toolbox.launch">
        <arg name="offline" value="true"></arg>
        </include>
</group>
</launch>